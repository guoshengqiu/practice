正课：
1. ***事件：
   ***事件周期
   固定套路：
    1. 取消冒泡
    2. 利用冒泡
    3. 取消事件
   事件坐标：

1. ***事件:
   ***事件周期：从事件触发到各级事件执行完毕的全过程
    DOM 标准：3个阶段：
        1. 捕获阶段： 从根元素-目标元素  
        	捕获：记录每一级元素是否绑定了事件处理函数
        2. 目标触发: 触发目标元素上的事件处理函数
            目标元素：实际触发事件的元素
        3. 冒泡触发：从实际发生事件的元素的父元素开始，依次触发各级父元素上捕获的事件处理函数

    改变事件触发的顺序：
 elem.addEventListener("事件名",函数对象,是否在捕获阶段触发);
        第三个参数为true，可提前触发该事件处理函数

    IE8 事件周期：没有捕获阶段，只有目标触发和冒泡
         不支持addEventListener
         attachEvent("on事件名",函数对象)
       因为没有捕获阶段和第三个参数，所以无法改变事件触发顺序

    事件对象：在事件发生时，自动创建，封装事件信息的对象
       获取事件对象：
	DOM 标准：默认event对象作为事件处理函数第一个参数传入
		arguments[0]
        IE 8：事件发生时创建事件对象，放入全局变量event
                window.event
        兼容：var e=window.event||arguments[0];
                      IE            DOM

    固定套路：
　　　1. 取消冒泡：
          DOM 标准: 阻止事件继续向下传导和事件冒泡
              e.stopPropagation(); 
          IE 8: 仅阻止事件冒泡阶段
              e.cancelBubble=true;
          兼容模式：
              if(e.cancelBubble){
		e.cancelBubble=true;
              }else{
		e.stopPropagation(); 
              }
   ***2. 利用冒泡：
      ***优化：如果多个子元素都定义了相同的事件处理函数
               只要在父元素上定义一次事件处理函数即可
         为什么：页面中事件绑定的次数直接影响页面执行效率！
                 减少事件绑定次数，都可提高页面执行效率

      ***获得目标元素：
        DOM 标准: e.target
        IE 8: e.srcElement
        兼容: var target=e.target||e.srcElement;
                             DOM       IE

     3. 取消事件：2种情况：
       1. 在html中绑定的事件处理函数: 2个return
          html: <elem onXXX="return fun()"
          js: function fun(){
                 return true/false;
              }
          如果fun返回true，则继续执行事件,否则取消事件

       2. 在js中动态绑定事件如何取消：
          DOM 标准：e.preventDefault();
          IE 8: e.returnValue=false;
          兼容: if(e.preventDefault){
                    e.preventDefault();
                }else{
		    e.returnValue=false;
                }

   事件发生时，鼠标的坐标: 3种定位范围
       左上角: 0,0
    1. 相对于屏幕左上角: e.screenX/Y
         最大值: screen.availWidth/availHeight

    2. 相对于文档显示区左上角: var x=e.clientX||e.x;
                         var y=e.clientY||e.y;
         最大值: window.innerWidth/innerHeight

    3. 相对于父元素左上角: e.offsetX/Y
         最大值: 父元素的width和height

   页面滚动: window.onscroll
	获得页面滚动的距离：页面顶部超出文档显示区顶部的距离
	    var scrollTop=document.documentElement.scrollTop
                          ||document.body.scrollTop
















    