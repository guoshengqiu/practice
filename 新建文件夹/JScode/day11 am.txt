正课：
1. ***bind方法
2. *严格模式:

1. fun.bind方法: 基于现有fun函数对象，创建一个新的函数对象
                 ***同时封装一个固定的this值
                 ――提前绑定this！
      var newFun=fun.bind(替代this的对象[,参数值列表])
      newFun(); //this-->替代this的对象
   ***bind的实现原理：见课堂练习

补：为什么要用this：
    如果在方法中写死对象名(变量名)――紧耦合
    结果：对象名变化，要手动修改方法内容
    var lilei={sname:"Li Lei",
               intrSelf:function(){
		console.log("I'm "+lilei.sname);
               }
    }     
    var lil=lilei;
    lilei=null;
    lil.intrSelf();//报错：找不到null的sname属性

    this-->动态获得调用函数时的对象――松耦合――必须！
    结果：对象名(变量名)发生变化，不用修改方法内容！

2. *严格模式：比普通程序执行，要求更严格的一套全新的执行规定
              严格模式和普通模式是完全不同的执行方式
      为什么：消除陷阱――静默失败：
              为将来新的更广泛的ES标准打基础
    如何启用：2个范围：一个<script>内
                       一个函数内
              "use strict";――代码段之前！
    ***要求：1. 禁止对未声明过的变量赋值！
             2. 将静默失败升级为错误!
             3. 新增了eval作用域，在eval中声明的变量，eval结束后不能访问！
             4. 局部变量改变，不影响arguments中的原参数值
             
    Exercise Day09：*****第一题

    
    










