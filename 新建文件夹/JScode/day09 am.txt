正课：
1. ***面向对象：
   1. 什么是面向对象
   2. 创建对象
   3. *****this
   4. ****原型和原型链
   5. *****继承

1. 什么是面向对象：程序中都是用对象结构描述现实中一个事物
     为什么：现实中一个数据或一个功能都要包含在一个具体事物上才有意义！
     何时使用：所有数据和功能都应该先包含在对象中，再使用！
     对象：内存中存储多个数据的存储空间――存储
           描述现实中一个事物的属性值和功能的程序结构――用法
     属性：在对象中，描述当前对象某个特性值的一个变量
     方法：在对象中，提供一项功能的函数
           其实就是引用函数对象的属性而已
     成员: 属性和方法统称为对象的成员！
     ***封装：将属性变量和方法，集中定义在一个对象中
      优点：1. 代码重用！
            2. 便于维护！

2. 创建自定义对象：3种：
   1. 创建一个单独的对象：2种：
       1. 对象直接量: var obj={//强调: 属性和方法名都是字符串
                               //	其实可省略引号
                          "属性名":属性值,//强调:逗号分隔
                               ...:...,
                          "方法名":function(...){
			      ...
                              return ...;
                          },
                          ...//强调:结尾不加逗号 
                      }
          访问对象中的属性和方法: . 读作"的"
          *****对象的底层其实就是一个hash数组
          *****js底层一切都是hash数组
          相同：
            1. 遍历对象中所有属性值：
              for(var key in obj){
                 console.log(key+":"+obj[key])
              }
            2. 随时可向对象中增加新属性：
          不同：类型不同：
  
          ***对象的方法中如何访问当前对象自己的属性：
              this. --> "当前对象的"
           何时使用：只要对象的方法中使用当前对象自己的属性
                     就必须用this.属性名
        
        2. 使用实例化新对象: 2步:
            1. 创建空对象：var obj=new Object();//或{}
            2. 向空对象中增加新属性: 
                 obj.成员名=值;   
                   ["成员名"] 

     2. 反复创建相同结构的对象：2步：
        1. 先定义构造函数: （设计图）
           构造函数: 描述创建一个对象的结构的函数
           function 构造函数名/类型名(参数变量){
                this.属性名=参数变量;
                ...
                this.方法名=function(){
		    ...
                }
           }                                       
        2. 使用new关键字，创建对象同时，调用构造函数
           var obj=new 构造函数名(属性值列表)

  *****什么是this：EC中记录当前正在调用函数的对象的属性
                   (如果有. this指.前的对象
                    如果没有,this指window)
                   this和定义在哪儿无关！
                   this只和调用时使用的对象有关！
       new：4步: 
        1. 创建空对象: new Object()
        2. 使用新对象，调用构造函数
             (new Object()).构造函数();//this-->刚创建的空对象
        3. ?
        4. 将新对象地址，保存到等号左边的变量中










