正课：
1. ***匿名函数
2. *****闭包

1. ***匿名函数：没有函数名的函数定义
                没有任何变量引用
   何时：只要一个函数只执行一次时，就用匿名函数。
         执行完，立刻释放！
   为什么使用：匿名函数没有变量引用，调用完自动释放！
         缺点：不可重用！
   如何使用：2种：
     1. 匿名函数自调: 定义后立刻调用
          何时使用：只要一个函数只执行一次时
          如何使用：(function([参数列表]){
                        函数体;
                        return 返回值
                    }([参数值列表]));
     2. 回调：将函数作为对象传递给其他函数，由其它函数调用

2. *****闭包:
   作用域: 一个变量的可用范围：2种:
       1. 全局作用域:window
       2. 函数作用域:Activation Object
   作用域链: 多个作用域上下引用组成的链式结构
	开头：当前函数的EC中的scope chain属性
          scope chain->AO->window
        结尾: 全局对象window
   闭包: 实现可重用的局部变量，且保护其不受污染的机制
   问题：函数作用域: 不可重用!
         全局作用域: 极易被污染!
   何时使用：反复使用一个变量，又不希望被污染时
   如何使用：3特点：
       1. 外层函数包裹受保护的变量和内层函数――函数嵌套
       2. 内层函数专门负责操作外层函数保护的局部变量
       3. 将内层函数返回到外层函数外部，反复调用
   
   解题：1. 外层函数调用了几次，就有几个受保护的局部变量副本
         2. 同一次外层函数调用返回的多个内层函数，共同同一个局部变量。










