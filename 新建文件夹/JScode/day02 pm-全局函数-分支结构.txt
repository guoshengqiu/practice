正课：
1. ***函数
2. 全局函数――了解
3. 分支结构

1. ***函数：
***声明提前：在程序正式执行前，提前预读var声明的变量和function声明的函数，集中到*当前作用域*的顶部创建。赋值留在原地

2. 全局函数：ES标准中规定的，浏览器厂商已经实现的函数
             不需要使用任何对象，就可直接调用
    鄙视题：js的全局函数有哪些：
       手册: JavaScript-->左侧JavaScript-->底部JavaScript 对象
                        -->JS Functions-->全局函数的列表
    编码解码：
        张东  编码==> %E5%BC%A0 %E4%B8%9C
     多字节字符       单字节字符
        问题一：URI语法中不允许出现多字节字符！
        utf-8编码：一个汉字占3个字节
        年货  编码==> %E5%B9%B4 %E8%B4%A7
     如何编码解码：
        解决：var code=encodeURI(多字节字符串)
              返回编码后的单字节字符串
        问题二：URI语法中不允许和保留字冲突，不如  : /
        http://tmooc.cn ==> http%3A%2F%2Ftmooc.cn
        解决：encodeURIComponent
              decodeURIComponent

    eval：执行字符串格式的代码或表达式
  
    isFinit(num): 判断num是否在有限范围内
          如果num是有效的，且在有限范围内，返回true
                                     否则，返回false
      js中/0不会报错，会返回infinity――无穷大

3. 分支结构：
   1. 一个条件，一件事，满足就做(不满足就什么也不做)
      如果操作简单：短路：条件&&(操作1,操作2,...)
      如果操作复杂：
      if(条件){
           满足条件才执行的代码段
      }
   2. 一个条件，两件事，二选一执行
      如果操作简单：三目: 条件?操作1:操作2
      如果操作复杂：
      if(条件){
	满足条件才执行的代码段
      }else{
        不满足条件才执行的代码段
      }
   3. 多个条件，多件事，多选一执行
      如果操作简单，或仅返回不同的值时：三目：
          条件1?操作1/值1:
          条件2?操作2/值2:
            ...    ...:
               默认操作/值;
      如果操作复杂或可能一个都不执行时：
          if(条件1){
              满足条件1才执行的代码段
          }else if(条件2){
	      满足条件2才执行的代码段
	  }...{
             ...
          }[else{
	      默认代码段(只有以上所有条件都不满足时才执行)
          }]
        强调：只可能有一个if后的代码段被执行，后续if不再判断
      如果条件都是全等比较时，可用switch case代替else if结构、
	【客服按键选择功能案例：】
         switch(表达式){
	    case 值1:
		表达式的值===值1时执行的代码段
	        break;
            case 值2:
		表达式的值===值2时执行的代码段
		break;
               ...  :
		...
            [default:
		表达式的值和以上值都不相等时执行的默认代码段]
         }
      switch case vs else if
      switch case做全等比较，效率比else if高
      else if可自定义比较条件，可解决一切问题
      switch case限制条件只能是全等比较。

      break：退出当前结构
      何时不加break：相邻两个case执行相同代码时
        














