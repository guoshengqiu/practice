1、基本数据类型
   1、number
      整数、小数
      小数：浮点数  1.234  -》3.5E2
      开辟空间：8个字节 --> 64位
   2、string
      字符文本
      使用时需要通过 '' 或 ""进行包裹
   3、boolean
      布尔型
      取值:true  或  false
      使用场合：条件
   4、null
      空
   5、undefined
      未定义

      var name="张三丰";
      name = 18;
      name=true;

2、打印输出
   控制台 ：console.log()
   页面:document.write()
   对话框:window.alert()  或  alert();
3、类型转换
   1、typeof() 函数
      判断指定数据的类型
      typeof(变量)
      typeof(表达式)
      typeof(数值)
      表达式：由运算符连接而成的式子
      var name="";
      var age=18;
      var result = name + age;
   2、显示转换(强制转换)
      1、toString()
         变量.toString()
      2、parseInt()
         转换成整数
	 var parseValue = parseInt(变量/值);
	 var a = "123abc";
	 parseInt(a); --> 123
	 var b = "123.45";
	 parseInt(b); --> 123
	 var c = "abc123";
	 parseInt(c); --> NaN
	 var d = "abc";
	 parseInt(d); --> NaN
      3、parseFloat()
         var a = "123.45";
	 parseFloat(a) --> 123.45

输入提示框
  window.prompt("请输入工资:","0");

函数:
    是一段被预定义好，并且可以被反复使用的代码块。可以包含多条可执行的语句
    函数也成为方法，或过程。其实就是一个独立的功能体。
         
    函数只有在被调用时才会执行

    如何把执行语句放在函数中：封装函数
    如何去使用函数:调用函数

    1、定义(封装)函数
       function 函数名称(){
	//函数体
	//其实就是若干条的执行语句
       }

       //封装一个函数
         1、接受用户输入的数据 window.prompt
	 2、打印输出 输入的数据
    2、调用函数
       1、在<script>中
          直接使用 函数名称() 进行调用
       2、在html元素中的事件里调用
          onclick --> 单击事件
	  <input type="button" value="点我啊" onclick="函数名称()" />

	  事件名称="函数名称()"

 练习：声明一个函数，要求在函数中能够完成 让用户分两次输入两个数字，并且能够实现两个数字的加法操作，最后打印结果。
 创建一个按钮，在按钮 点击 时，执行以上操作
      
   带参数的函数:
   声明函数过程中，可以定义函数在运行过程中需要用到的参数
   声明语法:
      function 函数名称(参数列表){
      
      }
      参数列表：变量名称，多个值的话用 ,来区分
   调用：
      如果调用的函数具备参数，那么一定要传参
      函数名称(具体数据);

      var fruit = "苹果";
      zhaZhiJi(fruit);

      parseInt("25");
      prompt("请输入一个数字");
      alert();

分支结构：
  1、什么分支结构
     程序在运行过程中，根据不同的【条件】，选择执行某段语句(语句块)。
     又叫选择结构。
     1、当条件满足的时候运行某些语句
         if 结构
     2、条件满足运行一部分语句，条件不满足，运行另一部分语句
         if .. else 结构
  2、if 结构
     语法：

       if(条件){
	 //满足条件要做的事情
       }

       条件：一定是boolean类型的数值或表达式
       如果条件 为 true ，则执行 {}里的内容
       如果条件 为 false, 则不执行 {}里的内容(跳过大括号，继续向下执行)

       比较运算符: > ,< ,>=,<=,==,!=
          == : 判断等于，判断两个数值是否相等
	  != : 不等于,判断两个数值是否不相等

	 5 == 5 : true
	 5 != 5 : false
	 3 >= 5 : false
	 5 >= 5  : true


	以上运算符的运算结构全部为 boolean类型

	  = : 赋值
  注意：
      1、if结构中的 {} 是可以被省略的，如果省略的话，那么if只控制到它下面的第一条语句。建议不要省略{}，哪怕if结构中只有一句话。
      2、有些值，放在条件中，会自动转换为false
        if(0){}
	if(0.0){}
	if(null){}
	if(undefined){}
	if(NaN){}
	if(""){}
	if(''){}

	除以上情况外，其余数值放在 条件中，都默认为真
	if(123){} 真
	if("Hello") 真
  3、if ... else 结构
     条件满足是，可以执行一个语句块，当条件不满足时，执行另外一个语句块。两个块中只能选择一个被执行
     if(条件) {
	//条件满足时执行
	语句块1;
     }else{
	//条件不满足时执行
	语句块2;
     }


 练习：
    在之前程序上 ，判断用户输入的金额是否比总价高，如果比总价高的话正常进行计算(找零、提示)，否则，提示，付款金额不足 .....

 问题：
       输入一个考试的分数
       如果分数 == 100  奖励一台兰博基尼
       如果分数 >= 90 奖励一台 保时捷
       如果分数 >= 80 奖励一台 奔驰
       如果分数 >= 70 奖励一台 奥迪
       如果分数 >= 60 奖励一台 奥拓
       否则 ：奖励一 大嘴巴

 多重 if 结构

   一个完整的结构，允许出现多次条件判断，只能选择一个(匹配上的第一个)满足的条件去执行

 语法结构:
    if(条件1){
	语句块1;
    }else if(条件2){
	语句块2;
    }else if(条件3){
	语句块3;
    }else if(条件n){
	语句块n
    }else{}
克莱托指数：
   体重(kg) / 身高(m) * 身高(m)
   指数：
      < 20 偏瘦
      20 < 指数 < 25 正常
      > 25 偏胖
编写一个 个人所得税计算器函数，接受一个参数表示工资值，通过函数计算工资所对应的个人所得税是多少。
3500 以下 免征
3500 ~ 5000部分 缴纳 3%
5000 ~ 9000部分 缴纳 10%
9000 以上部分 缴纳 20%




